# The MIT License (MIT)

# Proposed controller implementation written in Swagger | Copyright (c) 2017 Ke Qian

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

---
swagger: "2.0"
info:
  description: "CZoB API Specs"
  version: "1.0.0"
  title: "CZoB"
host: "127.0.0.1:8000"
basePath: "/v1"
schemes:
- "http"
produces:
- "application/json"
paths:
  /animals:
    get:
      tags:
      - "Animals"
      description: "Returns information about animals of a given tag(s)."
      operationId: "animalsGET"
      parameters:
      - name: "habitat"
        in: "query"
        description: "Habitat of animals"
        required: true
        type: "string"
      - name: "food"
        in: "query"
        description: "Food pref of animals"
        required: false
        type: "string"
      responses:
        200:
          description: "A list of animals"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Animal"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Animals"
    post:
      tags:
      - "Animals"
      description: "Adds a new animal to a given tag(s)."
      operationId: "animalsPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Animal with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/Animal"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Animals"
    put:
      tags:
      - "Animals"
      description: "Edit a animal."
      operationId: "animalsPUT"
      parameters:
      - in: "body"
        name: "body"
        description: "Animal with given ID to be updated"
        required: true
        schema:
          $ref: "#/definitions/Animal"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Animals"
  /animals/{id}:
    get:
      tags:
      - "Animals"
      description: "Returns information about the animal of a specified ID."
      operationId: "animalsIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of animal"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "An animal"
          schema:
            $ref: "#/definitions/Animal"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Animals"
    delete:
      tags:
      - "Animals"
      description: "Delete an animal."
      operationId: "animalsIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of animal"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Animals"
  /images:
    post:
      tags:
      - "Images"
      description: "Adds a new image to a given animal."
      operationId: "imagesPOST"
      parameters:
      - in: "body"
        name: "body"
        description: "Image with default ID to be added"
        required: true
        schema:
          $ref: "#/definitions/Image"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Images"
  /tags:
    get:
      tags:
      - "Tags"
      description: "Returns information about tags."
      operationId: "tagsGET"
      parameters:
      - name: "type"
        in: "query"
        description: "Type of tags, e.g. habitat, food"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "A list of tags"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Tags"
definitions:
  Animal:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "ID of an animal"
      habitat:
        type: "integer"
        format: "int32"
        description: "Habitat"
      food:
        type: "integer"
        format: "int32"
        description: "Food preference"
      name:
        type: "string"
        description: "Name of animal"
      detail:
        type: "string"
        description: "Description of animal"
  Image:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "ID of an image"
      filename:
        type: "string"
        description: "Filename of image"
      animal:
        type: "integer"
        format: "int32"
        description: "Animal an image belongs to"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "ID of a tag"
      type:
        type: "integer"
        format: "int32"
        description: "Type of tag"
      name:
        type: "string"
        description: "Name of tag"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
